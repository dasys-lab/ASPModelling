## Iterate over all facts
#foreach($fact in $facts)
#fact($fact)

#end

## Iterate over all rules
#foreach($rule in $rules)
#terms($rule.getHead().getPredicateTerms()) ##
:- ##
#terms($rule.getBody().getPredicateTerms())##
.
#end

## Macro for a single fact
#macro(fact $f)
$f.getName()##
#if(!$f.getConstants().isEmpty())
(#constants($f.getConstants()))##
#end
.
#end

## Macro for multiple elements, seperated by ','
#macro(elements $es)
#set($separator = "")## No comma before first element
#foreach ($e in $es)##
$separator##
#element($e)##
#set($separator = ", ")##
#end
#end

## Macro for single Element
#macro (element $e)
$e.getName()##
#end

## Macro for multiple constants, seperated by ','
#macro(constants $cs)
#set($separator = "")## No comma before first element
#foreach ($c in $cs)##
$separator##
#constant($c)##
#set($separator = ", ")##
#end
#end

## Macro for single Constant
#macro (constant $c)
$c.getName()##
#end

## Macro for multiple predicate terms, separated by ','
#macro(terms $ts)
#set($separator = "")## No comma before first element
#foreach($t in $ts)
$separator##
#if(!$t.getName())## Choices don't have names
#choice($t)
#else
#predicate($t)
#end
#set($separator = ", ")## Comma before all following elements
#end
#end

## Macro for a single predicate
#macro(predicate $p)
#if(!$p.isTrue())
not ##
#end
$p.getName()##
#if(!$p.getElements().isEmpty())
(#elements($p.getElements()))##
#end
#end

## Macro fo a choice
#macro(choice $c)
$c.getLowerBoundString(){##
#set($separator = "")## No semicolon before first element
#foreach($p in $c.getPredicates())
$separator##
#predicate($p)
#set($separator = "; ")## Semicolon before all following elements
#end
}$c.getUpperBoundString()##
#end