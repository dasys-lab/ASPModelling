## Iterate over all constants
// Constants used in the ASP-program
#foreach($c in $constants)
#declareConstant($c)

#end

## Iterate over all variables
// Variables used in the ASP-program
#foreach($v in $variables)
#declareVariable($v)

#end

## Iterate over all predicates
// Predicates used in the ASP-program
#foreach($p in $predicates)
#declarePredicate($p)

#end

## Iterate over all choices
// Choices used in the ASP-program
#foreach($c in $choices)
#declareChoice($c)

#end

## Iterate over all facts
// Facts, that are part of the ASP-program
#foreach($f in $facts)
#declareFact($f)

#end

## Iterate over all rules
// Rules, that are part of the ASP-program
#foreach($r in $rules)

#end

## Create model

## Macro for declaring one constant
#macro(declareConstant $c)
Constant $ASPGenerator.createJavaCodeName($c) = new Constant().withName("$c.getName()");##
#end

## Macro for declaring one variable
#macro(declareVariable $v)
Variable $ASPGenerator.createJavaCodeName($v) = new Variable().withName("$v.getName()");##
#end

## Macro for declaring one predicate
#macro(declarePredicate $p)
Predicate $ASPGenerator.createJavaCodeName($p) = new Predicate().withName("$p.getName()")##
#if(!$p.isTrue())

    .withIsTrue(false)##
#end
#if(!$p.getElements().isEmpty()) ## Newline to make it look nicer

    .withElements(#list($p.getElements()))##
#end
;##
#end

## Macro for declaring one choice
#macro(declareChoice $c)
Choice $ASPGenerator.createJavaCodeName($c) = new Choice()##
#if($c.getLowerBound().isPresent() && $c.getLowerBound().equals($c.getUpperBound()))

    .exact($c.getLowerBound().getAsInt())##
#else
#if($c.getLowerBound().isPresent())

    .withLowerBound($c.getLowerBound().getAsInt())##
#end
#if($c.getUpperBound().isPresent())

    .withUpperBound($c.getUpperBound().getAsInt())##
#end
#end
#if(!$c.getPredicates().isEmpty())

    .withPredicates(#list($c.getPredicates()))##
#end
;##
#end

## Macro for declaring one fact
#macro(declareFact $f)
Fact $ASPGenerator.createJavaCodeName($f) = new Fact().withName("$f.getName()")
#if(!$f.getConstants().isEmpty())
    .withConstants(#list($f.getConstants()))##
#end
;##
#end

## Macro for a comma-separated list of objects
#macro(list $os)
#set($separator = "")## No comma before first object
#foreach ($o in $os)##
$separator##
$ASPGenerator.createJavaCodeName($o)##
#set($separator = ", ")##
#end
#end